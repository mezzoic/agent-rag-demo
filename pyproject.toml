# RAG Demo with Azure AI Foundry and LlamaIndex
[project]
name = "agent-rag-demo"
version = "0.1.0"
description = "A clean, extensible RAG system using Azure AI Foundry, LlamaIndex, and Hugging Face datasets"
requires-python = ">=3.12"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
readme = "README.md"
keywords = ["rag", "azure-ai", "llama-index", "retrieval", "ai", "machine-learning"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

# Core dependencies for production RAG system
dependencies = [
    "llama-index>=0.12.46",
    "datasets>=3.6.0", 
    "llama-index-retrievers-bm25>=0.5.2",
    "llama-index-llms-huggingface-api>=0.5.0",
    "python-dotenv>=1.0.0",
    # Optional LLM providers (graceful fallback)
    "llama-index-llms-azure-openai>=0.3.0",
    "llama-index-llms-ollama>=0.6.0",
    "llama-index-llms-openai>=0.4.7",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "black>=24.0.0",
    "isort>=5.13.0",
    "mypy>=1.8.0",
    "ruff>=0.1.0",  # Fast linter/formatter
]

[project.urls]
Homepage = "https://github.com/yourusername/agent-rag-demo"
Repository = "https://github.com/yourusername/agent-rag-demo"
Documentation = "https://github.com/yourusername/agent-rag-demo#readme"
Issues = "https://github.com/yourusername/agent-rag-demo/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

# Tool configurations for development
[tool.black]
line-length = 100
target-version = ['py312']

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.ruff]
line-length = 100
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]

[dependency-groups]
dev = [
    "ruff>=0.12.2",
]

[project.scripts]
rag-demo = "app.app:main"
rag-demo-no-llm = "app.app_no_llm:main"
test-azure = "test_azure:test_azure_ai"
